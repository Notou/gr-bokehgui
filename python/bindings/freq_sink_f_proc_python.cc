/*
 * Copyright 2021 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(freq_sink_f_proc.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(01d966667030b136b4992a55be8954d0)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/bokehgui/freq_sink_f_proc.h>
// pydoc.h is automatically generated in the build directory
#include <freq_sink_f_proc_pydoc.h>

void bind_freq_sink_f_proc(py::module& m)
{

    using freq_sink_f_proc    = ::gr::bokehgui::freq_sink_f_proc;


    py::class_<freq_sink_f_proc, gr::bokehgui::base_sink<float>,
        std::shared_ptr<freq_sink_f_proc>>(m, "freq_sink_f_proc", D(freq_sink_f_proc))

        .def(py::init(&freq_sink_f_proc::make),
           py::arg("fftsize"),
           py::arg("wintype"),
           py::arg("fc"),
           py::arg("bw"),
           py::arg("name"),
           py::arg("nconnections"),
           D(freq_sink_f_proc,make)
        )
        




        
        .def("reset",&freq_sink_f_proc::reset,       
            D(freq_sink_f_proc,reset)
        )


        
        .def("get_center_freq",&freq_sink_f_proc::get_center_freq,       
            D(freq_sink_f_proc,get_center_freq)
        )


        
        .def("get_bandwidth",&freq_sink_f_proc::get_bandwidth,       
            D(freq_sink_f_proc,get_bandwidth)
        )


        
        .def("get_wintype",&freq_sink_f_proc::get_wintype,       
            D(freq_sink_f_proc,get_wintype)
        )


        
        .def("set_fft_window",&freq_sink_f_proc::set_fft_window,       
            py::arg("newwintype"),
            D(freq_sink_f_proc,set_fft_window)
        )


        
        .def("buildwindow",&freq_sink_f_proc::buildwindow,       
            D(freq_sink_f_proc,buildwindow)
        )


        
        .def("set_frequency_range",&freq_sink_f_proc::set_frequency_range,       
            py::arg("arg0"),
            py::arg("arg1"),
            D(freq_sink_f_proc,set_frequency_range)
        )


        
        .def("handle_set_freq",&freq_sink_f_proc::handle_set_freq,       
            py::arg("arg0"),
            D(freq_sink_f_proc,handle_set_freq)
        )


        
        .def("set_trigger_mode",&freq_sink_f_proc::set_trigger_mode,       
            py::arg("mode"),
            py::arg("level"),
            py::arg("channel"),
            py::arg("tag_key"),
            D(freq_sink_f_proc,set_trigger_mode)
        )

        ;




}








